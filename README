# Transcript Syncer

Automatically downloads Google Meet transcripts from Google Drive and adds them to the appropriate folder of the local Obsidian vault.

Setup:
1. Ensure Google Drive API credentials are in ../credentials/
2. Create symbolic link for launchd:
   ln -s /Users/mattobrien/Documents/Projects/transcript-syncer/launchd/com.mattobrien.transcriptsyncer.plist ~/Library/LaunchAgents/com.mattobrien.transcriptsyncer.plist
3. Load the launchd job:
   launchctl load ~/Library/LaunchAgents/com.mattobrien.transcriptsyncer.plist

To stop the service:
launchctl unload ~/Library/LaunchAgents/com.mattobrien.transcriptsyncer.plist

To check status:
launchctl list | grep transcriptsyncer

## Overview

This tool has two parts.
1. The Google Apps Script watches for new files to be created, and moves them into an appropriate Google Drive folder.
2. The local business monitors specific Google Drive folders for new transcript files, downloads them, formats them with appropriate frontmatter/context, and saves them to designated folders in an Obsidian vault.

## Current Status

- ✓ Basic functionality working
  - Connects to Google Drive
  - Downloads transcripts
  - Formats for Obsidian
  - Runs as background service
- ✓ Fixed issues
  - State file handling improved with retry logic
  - File existence checks prevent reprocessing
  - Better error handling for API timeouts
- ✓ Multi-folder support added
  - Handles multiple source folders
  - Maps to different destination folders
  - Maintains single state file

## Setup

1. Google Cloud Console setup:
   - Create project
   - Enable Drive API
   - Create service account
   - Download credentials
   - Share Drive folders with service account

2. Local setup:
   ```bash
   # Create project structure
   mkdir -p transcript-syncer/{src,credentials,state,logs,downloads}

   # Install dependencies
   pip install google-api-python-client

   # Place credentials file
   mv service-account.json transcript-syncer/credentials/

   # Create launchd symlink
   ln -s /path/to/transcript-syncer/launchd/com.mattobrien.transcriptsyncer.plist ~/Library/LaunchAgents/
   ```

3. Configure launchd service:
   ```bash
   launchctl load ~/Library/LaunchAgents/com.mattobrien.transcriptsyncer.plist
   ```

## How It Works

1. Runs every 5 minutes via launchd
2. Checks configured Google Drive folders for new transcripts
3. Downloads as markdown
4. Adds context/metadata
5. Saves to appropriate Obsidian folder
6. Tracks processed files in state file

## Project Structure

```
transcript-syncer/
├── src/
│   └── transcript_downloader.py  # Main script
├── credentials/           # Google API credentials
├── state/                # Tracks processed files
├── logs/                # Script logging
├── downloads/           # Downloaded transcripts
└── launchd/             # Service configuration
```

## Next Steps

1. Add folder-specific formatting
   - Customize headers by folder type
   - Add folder-specific metadata
   - Support different templates

2. Enhance logging
   - Better error context
   - Timestamps in all logs
   - Processing statistics

3. Consider improvements:
   - Batch processing
   - Better error recovery
   - Rate limit handling
   - Monitoring/alerts

## Usage

```bash
# Start service
launchctl load ~/Library/LaunchAgents/com.mattobrien.transcriptsyncer.plist

# Stop service
launchctl unload ~/Library/LaunchAgents/com.mattobrien.transcriptsyncer.plist

# Check status
launchctl list | grep transcriptsyncer

# View logs
tail -f ~/Documents/Projects/transcript-syncer/logs/transcript_syncer.log
```

## Configuration

Key configuration points:
- Google Drive folder IDs
- Local paths
- Update frequency
- Logging levels

## Path Mappings

Google Drive folders and their corresponding local Obsidian paths:

| Type | Drive Folder ID | Local Path |
|------|----------------|------------|
| Customer Calls | 108_9MeB539PK6NVEjgARZuQKfms_PPt0 | /Users/mattobrien/Obsidian Main Vault/ObsidianVault/-No Instructions/User testing/Transcripts |
| Dragon | 1FsPM-xB7EH6Fc2CCu67EHDhYMotx0EYc | /Users/mattobrien/Obsidian Main Vault/ObsidianVault/Oceano/Principals/Dragon/Transcripts |
| Meetings | 1EiScFFGiE6hdKBOZeSicnO_lxv2U3mcB | /Users/mattobrien/Obsidian Main Vault/ObsidianVault/-No Instructions/Daily/Transcripts |

## Adding a New Folder

To add a new folder to be monitored and synced:

1. Create new folder in Google Drive

2. Share folder with service account:
   - Share with: `transcript-syncer-service@transcript-syncer.iam.gserviceaccount.com`
   - Role: Viewer

3. Update Google Apps Script (`script.js`):
   - Add new folder ID to constants
   - Add handling logic in `sortMeetingTranscripts()`

4. Update Python script (`src/transcript_downloader.py`):
   - Add new folder mapping to `FOLDER_MAPPINGS` dictionary:
   ```python
   FOLDER_MAPPINGS = {
       "NEW_FOLDER_ID": "/path/to/destination/folder",
       # ... existing mappings ...
   }
   ```

5. Test new configuration:
   - Move a test transcript to the new folder in Drive
   - Run syncer to verify it downloads to correct location

## Known Behaviors
- Files take 20-40 seconds each to process
- Google Drive API occasionally times out
- Script overwrites existing files rather than creating duplicates
